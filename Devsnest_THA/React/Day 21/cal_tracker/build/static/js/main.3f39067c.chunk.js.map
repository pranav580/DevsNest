{"version":3,"sources":["components/AppBar.jsx","components/AppControlsCounter.jsx","components/AppControlsDelete.jsx","components/AppControlsInputs.jsx","components/AppMealsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppBar","AppControlsCounter","className","AppControlsDelete","AppControlsInputs","addMealHanler","mealName","cal","setMealName","setCal","type","placeholder","value","onChange","e","target","min","onClick","AppMealsList","meals","deleteMealHandler","map","meal","index","id","App","useState","setMeals","oldMeals","Math","floor","random","newMeals","concat","alert","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NACe,SAASA,IACpB,OACI,kDCFR,IAQeC,EARU,WACrB,OACI,qBAAKC,UAAU,uBAAf,SACI,kDAAoB,2CCIjBC,EAPS,WACpB,OACI,qBAAKD,UAAU,sBAAf,SACI,qBAAKA,UAAU,iBAAf,2BC0BGE,EA7BU,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,cAAgBC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAInE,OACI,sBAAKP,UAAU,sBAAf,UACI,uBAAOQ,KAAK,OAAOC,YAAY,OAAOC,MAAON,EACzCO,SACI,SAACC,GACGN,EAAYM,EAAEC,OAAOH,UAIjC,uBAAOF,KAAK,SAASC,YAAY,WAAWK,IAAI,IAAIJ,MAAOL,EACvDM,SACI,SAACC,GACGL,EAAOK,EAAEC,OAAOH,UAI5B,8BACI,wBAAQV,UAAU,kBACde,QArBM,WAClBZ,KAmBQ,4BCADa,EApBM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAQC,EAAqB,EAArBA,kBAE3B,OACI,qBAAKlB,UAAU,QAAf,SACKiB,EAAME,KAAI,SAACC,EAAOC,GAAR,OACP,qBAAiBrB,UAAU,OAA3B,SACA,sBAAiBA,UAAU,aAA3B,UACI,6BAAKoB,EAAKhB,WACV,oDAAuBgB,EAAKf,IAA5B,eACJ,qBAAKL,UAAU,SAAf,SACI,wBAAQA,UAAU,kBACde,QAAS,kBAAIG,EAAkBE,EAAKE,KADxC,wBAJMD,IADAA,S,MCiDXE,MAhDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiBE,EAAjB,KACA,EAAsBkB,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYE,EAAZ,KA8BA,OACE,sBAAKP,UAAU,MAAf,UACE,cAACF,EAAD,IACA,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,CAAmBG,cAlCH,WAElB,IAAMuB,EAAQ,YAAOT,GACfG,EAAO,CACXhB,WACAC,MACAiB,GAAIK,KAAKC,MAAoB,IAAdD,KAAKE,WAGhBC,EAAWJ,EAASK,OAAOX,GAE9Bf,GAAO,GAAkB,KAAbD,EACb4B,MAAM,qBAENP,EAASK,GAGXxB,EAAY,IACZC,EAAO,IAgB4CH,SAAUA,EAAUC,IAAKA,EAAKC,YAAaA,EAAaC,OAAQA,IACjH,qBAAKP,UAAU,QAAf,SACE,cAAC,EAAD,CAAciB,MAAOA,EAAOC,kBAfR,SAACI,GACzB,IACMQ,EADQ,YAAOb,GACKgB,QAAO,SAAChB,GAAD,OAASA,EAAMK,KAAOA,KACvDG,EAASK,YC1BEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f39067c.chunk.js","sourcesContent":["\r\nexport default function AppBar(){\r\n    return(\r\n        <nav>Calorie Tracker</nav>\r\n    )\r\n}","\r\nconst AppControlsCounter=()=>{\r\n    return(\r\n        <div className=\"app_controls_counter\">\r\n            <h2>Total Calories: <span>0</span></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppControlsCounter;","\r\nconst AppControlsDelete=()=>{\r\n    return(\r\n        <div className=\"app_controls_Delete\">\r\n            <div className=\"btn btn-danger\">Delete All</div>\r\n        </div>\r\n    )\r\n}\r\nexport default AppControlsDelete;","\r\nconst AppControlsInputs =({addMealHanler , mealName, cal, setMealName, setCal})=>{\r\n    const onAddMealsClick=()=>{\r\n        addMealHanler();\r\n    }\r\n    return(\r\n        <div className=\"app_controls_inputs\">\r\n            <input type=\"text\" placeholder=\"Meal\" value={mealName} \r\n                onChange={\r\n                    (e)=>{\r\n                        setMealName(e.target.value);\r\n                    }\r\n                }\r\n            />\r\n            <input type=\"number\" placeholder=\"Calories\" min=\"0\" value={cal} \r\n                onChange={\r\n                    (e)=>{\r\n                        setCal(e.target.value);\r\n                    }\r\n                }\r\n            />\r\n            <div>\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={onAddMealsClick}\r\n                >Add Item</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppControlsInputs;","\r\n\r\nconst AppMealsList = ({meals , deleteMealHandler})=>{\r\n   \r\n    return(\r\n        <div className=\"listt\">\r\n            {meals.map((meal , index) => (\r\n                <div key={index} className=\"list\">\r\n                <div key={index} className=\"list_inner\">\r\n                    <h3>{meal.mealName}</h3>\r\n                    <h6>You have consumed {meal.cal} calories</h6>\r\n                <div className=\"btnDiv\">\r\n                    <button className=\"btn btn-primary\" \r\n                        onClick={()=>deleteMealHandler(meal.id)}\r\n                    >Delete</button>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default AppMealsList;","import React,{ useState  } from 'react';\nimport AppBar from './components/AppBar';\nimport AppControlsCounter from './components/AppControlsCounter';\nimport AppControlsDelete from './components/AppControlsDelete';\nimport AppControlsInputs from './components/AppControlsInputs';\nimport AppMealsList from './components/AppMealsList';\nimport './App.css';\n\nfunction App() {\n  const [meals, setMeals] = useState([]);\n  const [mealName, setMealName] = useState(\"\");\n  const [cal, setCal] = useState(0);\n  // const [openModel, setOpenModel] = useState(false);\n\n  const addMealHanler=()=>{\n    // console.log(\"Added\" , mealName , cal);\n    const oldMeals = [...meals];\n    const meal = {\n      mealName,\n      cal,\n      id: Math.floor(Math.random()*1000),\n    };\n\n    const newMeals = oldMeals.concat(meal);\n\n    if(cal <= 0 || mealName === \"\"){\n      alert(\"Must not be empty\");\n    }else{\n      setMeals(newMeals);\n    }\n\n    setMealName(\"\");\n    setCal(0);\n  };\n  \n  const deleteMealHandler = (id)=>{\n    const oldMeals = [...meals];\n    const newMeals = oldMeals.filter((meals)=>meals.id !== id);\n    setMeals(newMeals);\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar/>\n      <div className=\"top\">\n        <AppControlsCounter/>\n        <AppControlsDelete/>\n      </div>\n      <AppControlsInputs addMealHanler={addMealHanler} mealName={mealName} cal={cal} setMealName={setMealName} setCal={setCal}/>\n      <div className=\"track\">\n        <AppMealsList meals={meals} deleteMealHandler={deleteMealHandler}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}